{
  "asyncapi": "3.0.0",
  "info": {
    "title": "Example using ProtoBuff data types",
    "version": "1.0.0"
  },
  "channels": {
    "mychannel": {
      "address": "mychannel",
      "messages": {
        "testMessage": {
          "payload": {
            "schemaFormat": "application/vnd.google.protobuf;version=3",
            "schema": {
              "title": "Test",
              "type": "object",
              "properties": {
                "date": {
                  "title": "Date",
                  "type": "object",
                  "properties": {
                    "year": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 9999,
                      "x-primitive": "int32",
                      "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year"
                    },
                    "month": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 12,
                      "x-primitive": "int32",
                      "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
                    },
                    "day": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 31,
                      "x-primitive": "int32",
                      "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
                    }
                  }
                },
                "delay": {
                  "title": "Duration",
                  "type": "object",
                  "properties": {
                    "seconds": {
                      "type": "integer",
                      "minimum": -9007199254740991,
                      "maximum": 9007199254740991,
                      "x-primitive": "int64"
                    },
                    "nanos": {
                      "type": "integer",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "x-primitive": "int32"
                    }
                  }
                },
                "timestamp": {
                  "title": "DateTime",
                  "type": "object",
                  "properties": {
                    "year": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 9999,
                      "x-primitive": "int32",
                      "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year"
                    },
                    "month": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 12,
                      "x-primitive": "int32",
                      "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
                    },
                    "day": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 31,
                      "x-primitive": "int32",
                      "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
                    },
                    "hours": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 23,
                      "x-primitive": "int32",
                      "description": "Hours of day in 24 hour format."
                    },
                    "minutes": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 59,
                      "x-primitive": "int32",
                      "description": "Minutes of hour of day."
                    },
                    "seconds": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 60,
                      "x-primitive": "int32",
                      "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds."
                    },
                    "nanos": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 999999999,
                      "x-primitive": "int32",
                      "description": "Fractions of seconds in nanoseconds."
                    },
                    "timeOffset": {
                      "oneOf": [
                        {
                          "title": "Duration",
                          "type": "object",
                          "properties": {
                            "seconds": {
                              "type": "integer",
                              "minimum": -9007199254740991,
                              "maximum": 9007199254740991,
                              "x-primitive": "int64",
                              "x-parser-schema-id": "<anonymous-schema-19>"
                            },
                            "nanos": {
                              "type": "integer",
                              "minimum": -2147483648,
                              "maximum": 2147483647,
                              "x-primitive": "int32",
                              "x-parser-schema-id": "<anonymous-schema-20>"
                            }
                          },
                          "x-parser-schema-id": "<anonymous-schema-18>"
                        },
                        {
                          "title": "TimeZone",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "x-primitive": "string",
                              "description": "IANA Time Zone Database time zone.",
                              "x-parser-schema-id": "<anonymous-schema-22>"
                            },
                            "version": {
                              "type": "string",
                              "x-primitive": "string",
                              "description": "IANA Time Zone Database version number.",
                              "x-parser-schema-id": "<anonymous-schema-23>"
                            }
                          },
                          "x-parser-schema-id": "<anonymous-schema-21>"
                        }
                      ]
                    }
                  }
                },
                "offset": {
                  "title": "Decimal",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "x-primitive": "string",
                      "description": "A representation of a decimal value, such as 2.5. Clients may convert values into language-native decimal formats, such as Java's [BigDecimal][] or Python's [decimal.Decimal][].\n\nThe string representation consists of an optional sign, `+` (`U+002B`) or `-` (`U+002D`), followed by a sequence of zero or more decimal digits (\"the integer\"), optionally followed by a fraction, optionally followed by an exponent.\n\nThe fraction consists of a decimal point followed by zero or more decimal digits. The string must contain at least one digit in either the integer or the fraction. The number formed by the sign, the integer and the fraction is referred to as the significand.\n\nServices **should** normalize decimal values before storing them by:\n- Removing an explicitly-provided `+` sign (`+2.5` -> `2.5`).\n- Replacing a zero-length integer value with `0` (`.5` -> `0.5`).\n- Coercing the exponent character to lower-case (`2.5E8` -> `2.5e8`).\n- Removing an explicitly-provided zero exponent (`2.5e0` -> `2.5`).",
                      "examples": [
                        "2.5e8",
                        "-2.5e8",
                        "2.5"
                      ]
                    }
                  }
                },
                "y": {
                  "title": "Int32Value",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "integer",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "x-primitive": "int32"
                    }
                  }
                },
                "dur": {
                  "title": "Duration",
                  "type": "object",
                  "required": [
                    "from",
                    "to"
                  ],
                  "properties": {
                    "from": {
                      "type": "integer",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "x-primitive": "int32"
                    },
                    "to": {
                      "type": "integer",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "x-primitive": "int32"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "messages": {
      "testMessage": {
        "payload": {
          "schemaFormat": "application/vnd.google.protobuf;version=3",
          "schema": {
            "title": "Test",
            "type": "object",
            "properties": {
              "date": {
                "title": "Date",
                "type": "object",
                "properties": {
                  "year": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 9999,
                    "x-primitive": "int32",
                    "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year"
                  },
                  "month": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 12,
                    "x-primitive": "int32",
                    "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
                  },
                  "day": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 31,
                    "x-primitive": "int32",
                    "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
                  }
                }
              },
              "delay": {
                "title": "Duration",
                "type": "object",
                "properties": {
                  "seconds": {
                    "type": "integer",
                    "minimum": -9007199254740991,
                    "maximum": 9007199254740991,
                    "x-primitive": "int64"
                  },
                  "nanos": {
                    "type": "integer",
                    "minimum": -2147483648,
                    "maximum": 2147483647,
                    "x-primitive": "int32"
                  }
                }
              },
              "timestamp": {
                "title": "DateTime",
                "type": "object",
                "properties": {
                  "year": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 9999,
                    "x-primitive": "int32",
                    "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year"
                  },
                  "month": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 12,
                    "x-primitive": "int32",
                    "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
                  },
                  "day": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 31,
                    "x-primitive": "int32",
                    "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
                  },
                  "hours": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 23,
                    "x-primitive": "int32",
                    "description": "Hours of day in 24 hour format."
                  },
                  "minutes": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 59,
                    "x-primitive": "int32",
                    "description": "Minutes of hour of day."
                  },
                  "seconds": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 60,
                    "x-primitive": "int32",
                    "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds."
                  },
                  "nanos": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 999999999,
                    "x-primitive": "int32",
                    "description": "Fractions of seconds in nanoseconds."
                  },
                  "timeOffset": {
                    "oneOf": [
                      {
                        "title": "Duration",
                        "type": "object",
                        "properties": {
                          "seconds": {
                            "type": "integer",
                            "minimum": -9007199254740991,
                            "maximum": 9007199254740991,
                            "x-primitive": "int64",
                            "x-parser-schema-id": "<anonymous-schema-19>"
                          },
                          "nanos": {
                            "type": "integer",
                            "minimum": -2147483648,
                            "maximum": 2147483647,
                            "x-primitive": "int32",
                            "x-parser-schema-id": "<anonymous-schema-20>"
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-18>"
                      },
                      {
                        "title": "TimeZone",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "x-primitive": "string",
                            "description": "IANA Time Zone Database time zone.",
                            "x-parser-schema-id": "<anonymous-schema-22>"
                          },
                          "version": {
                            "type": "string",
                            "x-primitive": "string",
                            "description": "IANA Time Zone Database version number.",
                            "x-parser-schema-id": "<anonymous-schema-23>"
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-21>"
                      }
                    ]
                  }
                }
              },
              "offset": {
                "title": "Decimal",
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "x-primitive": "string",
                    "description": "A representation of a decimal value, such as 2.5. Clients may convert values into language-native decimal formats, such as Java's [BigDecimal][] or Python's [decimal.Decimal][].\n\nThe string representation consists of an optional sign, `+` (`U+002B`) or `-` (`U+002D`), followed by a sequence of zero or more decimal digits (\"the integer\"), optionally followed by a fraction, optionally followed by an exponent.\n\nThe fraction consists of a decimal point followed by zero or more decimal digits. The string must contain at least one digit in either the integer or the fraction. The number formed by the sign, the integer and the fraction is referred to as the significand.\n\nServices **should** normalize decimal values before storing them by:\n- Removing an explicitly-provided `+` sign (`+2.5` -> `2.5`).\n- Replacing a zero-length integer value with `0` (`.5` -> `0.5`).\n- Coercing the exponent character to lower-case (`2.5E8` -> `2.5e8`).\n- Removing an explicitly-provided zero exponent (`2.5e0` -> `2.5`).",
                    "examples": [
                      "2.5e8",
                      "-2.5e8",
                      "2.5"
                    ]
                  }
                }
              },
              "y": {
                "title": "Int32Value",
                "type": "object",
                "properties": {
                  "value": {
                    "type": "integer",
                    "minimum": -2147483648,
                    "maximum": 2147483647,
                    "x-primitive": "int32"
                  }
                }
              },
              "dur": {
                "title": "Duration",
                "type": "object",
                "required": [
                  "from",
                  "to"
                ],
                "properties": {
                  "from": {
                    "type": "integer",
                    "minimum": -2147483648,
                    "maximum": 2147483647,
                    "x-primitive": "int32"
                  },
                  "to": {
                    "type": "integer",
                    "minimum": -2147483648,
                    "maximum": 2147483647,
                    "x-primitive": "int32"
                  }
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "protoSample": {
        "schemaFormat": "application/vnd.google.protobuf;version=3",
        "schema": {
          "title": "Test",
          "type": "object",
          "properties": {
            "date": {
              "title": "Date",
              "type": "object",
              "properties": {
                "year": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 9999,
                  "x-primitive": "int32",
                  "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year"
                },
                "month": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 12,
                  "x-primitive": "int32",
                  "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
                },
                "day": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 31,
                  "x-primitive": "int32",
                  "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
                }
              }
            },
            "delay": {
              "title": "Duration",
              "type": "object",
              "properties": {
                "seconds": {
                  "type": "integer",
                  "minimum": -9007199254740991,
                  "maximum": 9007199254740991,
                  "x-primitive": "int64"
                },
                "nanos": {
                  "type": "integer",
                  "minimum": -2147483648,
                  "maximum": 2147483647,
                  "x-primitive": "int32"
                }
              }
            },
            "timestamp": {
              "title": "DateTime",
              "type": "object",
              "properties": {
                "year": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 9999,
                  "x-primitive": "int32",
                  "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year"
                },
                "month": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 12,
                  "x-primitive": "int32",
                  "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
                },
                "day": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 31,
                  "x-primitive": "int32",
                  "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
                },
                "hours": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 23,
                  "x-primitive": "int32",
                  "description": "Hours of day in 24 hour format."
                },
                "minutes": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 59,
                  "x-primitive": "int32",
                  "description": "Minutes of hour of day."
                },
                "seconds": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 60,
                  "x-primitive": "int32",
                  "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds."
                },
                "nanos": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 999999999,
                  "x-primitive": "int32",
                  "description": "Fractions of seconds in nanoseconds."
                },
                "timeOffset": {
                  "oneOf": [
                    {
                      "title": "Duration",
                      "type": "object",
                      "properties": {
                        "seconds": {
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991,
                          "x-primitive": "int64",
                          "x-parser-schema-id": "<anonymous-schema-19>"
                        },
                        "nanos": {
                          "type": "integer",
                          "minimum": -2147483648,
                          "maximum": 2147483647,
                          "x-primitive": "int32",
                          "x-parser-schema-id": "<anonymous-schema-20>"
                        }
                      },
                      "x-parser-schema-id": "<anonymous-schema-18>"
                    },
                    {
                      "title": "TimeZone",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "x-primitive": "string",
                          "description": "IANA Time Zone Database time zone.",
                          "x-parser-schema-id": "<anonymous-schema-22>"
                        },
                        "version": {
                          "type": "string",
                          "x-primitive": "string",
                          "description": "IANA Time Zone Database version number.",
                          "x-parser-schema-id": "<anonymous-schema-23>"
                        }
                      },
                      "x-parser-schema-id": "<anonymous-schema-21>"
                    }
                  ]
                }
              }
            },
            "offset": {
              "title": "Decimal",
              "type": "object",
              "properties": {
                "value": {
                  "type": "string",
                  "x-primitive": "string",
                  "description": "A representation of a decimal value, such as 2.5. Clients may convert values into language-native decimal formats, such as Java's [BigDecimal][] or Python's [decimal.Decimal][].\n\nThe string representation consists of an optional sign, `+` (`U+002B`) or `-` (`U+002D`), followed by a sequence of zero or more decimal digits (\"the integer\"), optionally followed by a fraction, optionally followed by an exponent.\n\nThe fraction consists of a decimal point followed by zero or more decimal digits. The string must contain at least one digit in either the integer or the fraction. The number formed by the sign, the integer and the fraction is referred to as the significand.\n\nServices **should** normalize decimal values before storing them by:\n- Removing an explicitly-provided `+` sign (`+2.5` -> `2.5`).\n- Replacing a zero-length integer value with `0` (`.5` -> `0.5`).\n- Coercing the exponent character to lower-case (`2.5E8` -> `2.5e8`).\n- Removing an explicitly-provided zero exponent (`2.5e0` -> `2.5`).",
                  "examples": [
                    "2.5e8",
                    "-2.5e8",
                    "2.5"
                  ]
                }
              }
            },
            "y": {
              "title": "Int32Value",
              "type": "object",
              "properties": {
                "value": {
                  "type": "integer",
                  "minimum": -2147483648,
                  "maximum": 2147483647,
                  "x-primitive": "int32"
                }
              }
            },
            "dur": {
              "title": "Duration",
              "type": "object",
              "required": [
                "from",
                "to"
              ],
              "properties": {
                "from": {
                  "type": "integer",
                  "minimum": -2147483648,
                  "maximum": 2147483647,
                  "x-primitive": "int32"
                },
                "to": {
                  "type": "integer",
                  "minimum": -2147483648,
                  "maximum": 2147483647,
                  "x-primitive": "int32"
                }
              }
            }
          }
        }
      }
    }
  }
}