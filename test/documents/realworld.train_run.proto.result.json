{
  "asyncapi": "2.0.0",
  "info": {
    "title": "Example using ProtoBuff data types",
    "version": "1.0.0"
  },
  "channels": {
    "mychannel": {
      "publish": {
        "message": {
          "schemaFormat": "application/vnd.google.protobuf;version=3",
          "payload": {
            "title": "TrainRunContainerMsg",
            "type": "object",
            "properties": {
              "train_run": {
                "title": "TrainRunMsg",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "minimum": -2147483648,
                    "maximum": 2147483647,
                    "x-primitive": "int32",

                  },
                  "trasse_id": {
                    "type": "string",
                    "x-primitive": "string",

                  },
                  "betriebstag": {
                    "type": "object",
                    "title": "Date",
                    "required": [
                      "year",
                      "month",
                      "day"
                    ],
                    "properties": {
                      "year": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 9999,
                        "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year",

                      },
                      "month": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 12,
                        "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",

                      },
                      "day": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 31,
                        "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",

                      }
                    },
                    "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following:\n\n* A full date, with non-zero year, month, and day values\n* A month and day value, with a zero year, such as an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, such as a credit card expiration date",

                  },
                  "zugnummer": {
                    "type": "string",
                    "x-primitive": "string",

                  },
                  "infrastruktur_netz": {
                    "type": "string",
                    "x-primitive": "string",

                  },
                  "object_period": {
                    "title": "PeriodMsg",
                    "type": "object",
                    "properties": {
                      "von": {
                        "title": "Timestamp",
                        "type": "object",
                        "properties": {
                          "seconds": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 9007199254740991,
                            "default": 0,
                            "description": "Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.",

                          },
                          "nanos": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 999999999,
                            "default": 0,
                            "description": "Non-negative fractions of a second at nanosecond resolution.",

                          }
                        },
                        "description": "A Timestamp represents a point in time independent of any time zone or local calendar, encoded as a count of seconds and fractions of seconds at nanosecond resolution. The count is relative to an epoch at UTC midnight on January 1, 1970, in the proleptic Gregorian calendar which extends the Gregorian calendar backwards to year one.\n\nAll minutes are 60 seconds long. Leap seconds are \"smeared\" so that no leap  second table is needed for interpretation, using a [24-hour linear smear](https://developers.google.com/time/smear).\n\nThe range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By restricting to that range, we ensure that we can convert to and from [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.",

                      },
                      "bis": {
                        "title": "Timestamp",
                        "type": "object",
                        "properties": {
                          "seconds": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 9007199254740991,
                            "default": 0,
                            "description": "Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.",

                          },
                          "nanos": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 999999999,
                            "default": 0,
                            "description": "Non-negative fractions of a second at nanosecond resolution.",

                          }
                        },
                        "description": "A Timestamp represents a point in time independent of any time zone or local calendar, encoded as a count of seconds and fractions of seconds at nanosecond resolution. The count is relative to an epoch at UTC midnight on January 1, 1970, in the proleptic Gregorian calendar which extends the Gregorian calendar backwards to year one.\n\nAll minutes are 60 seconds long. Leap seconds are \"smeared\" so that no leap  second table is needed for interpretation, using a [24-hour linear smear](https://developers.google.com/time/smear).\n\nThe range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By restricting to that range, we ensure that we can convert to and from [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.",

                      }
                    },
                    "required": [],
                    "tags": {
                      "von": 1,
                      "bis": 2
                    },

                  },
                  "dr": {
                    "title": "Duration",
                    "type": "object",
                    "properties": {
                      "seconds": {
                        "type": "integer",
                        "minimum": -315576000000,
                        "maximum": 315576000000,
                        "default": 0,
                        "description": "Signed seconds of the span of time. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years",

                      },
                      "nanos": {
                        "type": "integer",
                        "minimum": -999999999,
                        "maximum": 999999999,
                        "default": 0,
                        "description": "Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field.",

                      }
                    },
                    "description": "A Duration represents a signed, fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like day or month",

                  },
                  "composition": {
                    "title": "CompositionMsg",
                    "type": "object",
                    "properties": {
                      "composition_id": {
                        "title": "Int32Value",
                        "type": [
                          "null",
                          "integer"
                        ],
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "x-primitive": "int32",

                      },
                      "train_run_id": {
                        "title": "Int32Value",
                        "type": [
                          "null",
                          "integer"
                        ],
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "x-primitive": "int32",

                      },
                      "reihenfolge": {
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "x-primitive": "int32",

                      },
                      "umsystem": {
                        "type": "string",
                        "x-primitive": "string",

                      },
                      "alast_anzahlwagen_chlor": {
                        "title": "Int32Value",
                        "type": [
                          "null",
                          "integer"
                        ],
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "x-primitive": "int32",

                      },
                      "formationsdaten_zlr": {
                        "title": "AbschnittsFormationsDatenZlrEnum",
                        "type": "string",
                        "enum": [
                          "AFDZ_UNSPECIFIED",
                          "AFDZ_KEINE_TRAKTION",
                          "AFDZ_ANHAENGELAST_FEHLT",
                          "AFDZ_MANUELL_ERGAENZT",
                          "AFDZ_OK"
                        ],
                        "x-enum-mapping": {
                          "AFDZ_UNSPECIFIED": 0,
                          "AFDZ_KEINE_TRAKTION": 1,
                          "AFDZ_ANHAENGELAST_FEHLT": 2,
                          "AFDZ_MANUELL_ERGAENZT": 3,
                          "AFDZ_OK": 4
                        },

                      },
                      "anzahl_loks": {
                        "title": "Int32Value",
                        "type": [
                          "null",
                          "integer"
                        ],
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "x-primitive": "int32",

                      }
                    },
                    "required": [],
                    "tags": {
                      "composition_id": 1,
                      "train_run_id": 2,
                      "reihenfolge": 3,
                      "umsystem": 4,
                      "alast_anzahlwagen_chlor": 27,
                      "formationsdaten_zlr": 28,
                      "anzahl_loks": 29
                    },

                  }
                },
                "required": [],
                "tags": {
                  "id": 1,
                  "trasse_id": 2,
                  "betriebstag": 3,
                  "zugnummer": 4,
                  "infrastruktur_netz": 5,
                  "object_period": 6,
                  "dr": 7,
                  "composition": 8
                },

              },
              "timetable_events": {
                "type": "array",
                "items": {
                  "title": "TimetableEventMsg",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "x-primitive": "int32",

                    },
                    "scheduled_time": {
                      "type": "object",
                      "title": "DateTime",
                      "required": [
                        "year",
                        "month",
                        "day",
                        "hours",
                        "minutes",
                        "seconds",
                        "nanos"
                      ],
                      "properties": {
                        "year": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9999,
                          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year",

                        },
                        "month": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 12,
                          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",

                        },
                        "day": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 31,
                          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",

                        },
                        "hours": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 23,
                          "description": "Hours of day in 24 hour format. Should be from 0 to 23",

                        },
                        "minutes": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 59,
                          "description": "Minutes of hour of day",

                        },
                        "seconds": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 60,
                          "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.",

                        },
                        "nanos": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 999999999,
                          "description": "Fractions of seconds in nanoseconds.",

                        },
                        "time_offset": {
                          "oneOf": [
                            {
                              "type": "object",
                              "title": "TimeZone",
                              "required": [
                                "id"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\".",

                                },
                                "version": {
                                  "type": "string",
                                  "description": "IANA Time Zone Database version number, e.g. \"2019a\".",

                                }
                              },
                              "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",

                            },
                            {
                              "type": "object",
                              "title": "Duration",
                              "properties": {
                                "seconds": {
                                  "type": "integer",
                                  "minimum": -315576000000,
                                  "maximum": 315576000000,
                                  "default": 0,
                                  "description": "Signed seconds of the span of time. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years",

                                },
                                "nanos": {
                                  "type": "integer",
                                  "minimum": -999999999,
                                  "maximum": 999999999,
                                  "default": 0,
                                  "description": "Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field.",

                                }
                              },
                              "description": "A Duration represents a signed, fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like day or month",

                            }
                          ],

                        }
                      },
                      "description": "Represents civil time (or occasionally physical time).",

                    },
                    "production_time": {
                      "type": "object",
                      "title": "DateTime",
                      "required": [
                        "year",
                        "month",
                        "day",
                        "hours",
                        "minutes",
                        "seconds",
                        "nanos"
                      ],
                      "properties": {
                        "year": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9999,
                          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year",

                        },
                        "month": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 12,
                          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",

                        },
                        "day": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 31,
                          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",

                        },
                        "hours": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 23,
                          "description": "Hours of day in 24 hour format. Should be from 0 to 23",

                        },
                        "minutes": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 59,
                          "description": "Minutes of hour of day",

                        },
                        "seconds": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 60,
                          "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.",

                        },
                        "nanos": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 999999999,
                          "description": "Fractions of seconds in nanoseconds.",

                        },
                        "time_offset": {
                          "oneOf": [
                            {
                              "type": "object",
                              "title": "TimeZone",
                              "required": [
                                "id"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\".",

                                },
                                "version": {
                                  "type": "string",
                                  "description": "IANA Time Zone Database version number, e.g. \"2019a\".",

                                }
                              },
                              "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",

                            },
                            {
                              "type": "object",
                              "title": "Duration",
                              "properties": {
                                "seconds": {
                                  "type": "integer",
                                  "minimum": -315576000000,
                                  "maximum": 315576000000,
                                  "default": 0,
                                  "description": "Signed seconds of the span of time. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years",

                                },
                                "nanos": {
                                  "type": "integer",
                                  "minimum": -999999999,
                                  "maximum": 999999999,
                                  "default": 0,
                                  "description": "Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field.",

                                }
                              },
                              "description": "A Duration represents a signed, fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like day or month",

                            }
                          ],

                        }
                      },
                      "description": "Represents civil time (or occasionally physical time).",

                    },
                    "stop": {
                      "title": "StopMsg",
                      "type": "object",
                      "properties": {
                        "event_id_from": {
                          "title": "Int32Value",
                          "type": [
                            "null",
                            "integer"
                          ],
                          "minimum": -2147483648,
                          "maximum": 2147483647,
                          "x-primitive": "int32",

                        },
                        "event_id_to": {
                          "title": "UInt32Value",
                          "type": [
                            "null",
                            "integer"
                          ],
                          "minimum": 0,
                          "maximum": 4294967295,
                          "x-primitive": "uint32",

                        },
                        "event_link_properties_id": {
                          "title": "UInt64Value",
                          "type": [
                            "null",
                            "integer"
                          ],
                          "minimum": 0,
                          "maximum": 9007199254740991,
                          "x-primitive": "uint64",

                        },
                        "min_duration": {
                          "type": "integer",
                          "minimum": -2147483648,
                          "maximum": 2147483647,
                          "x-primitive": "int32",

                        },
                        "purposes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "x-primitive": "string",

                          },

                        }
                      },
                      "required": [],
                      "tags": {
                        "event_id_from": 1,
                        "event_id_to": 2,
                        "event_link_properties_id": 3,
                        "min_duration": 10,
                        "purposes": 11
                      },

                    },
                    "movement": {
                      "title": "MovementMsg",
                      "type": "object",
                      "properties": {
                        "event_id_from": {
                          "type": "integer",
                          "minimum": -2147483648,
                          "maximum": 2147483647,
                          "x-primitive": "int32",

                        },
                        "event_id_to": {
                          "type": "integer",
                          "minimum": -2147483648,
                          "maximum": 2147483647,
                          "x-primitive": "int32",

                        },
                        "event_link_properties_id": {
                          "title": "Int32Value",
                          "type": [
                            "null",
                            "integer"
                          ],
                          "minimum": -2147483648,
                          "maximum": 2147483647,
                          "x-primitive": "int32",

                        },
                        "min_duration": {
                          "type": "integer",
                          "minimum": -2147483648,
                          "maximum": 2147483647,
                          "x-primitive": "int32",

                        },
                        "is_min_duration_calculated": {
                          "type": "boolean",
                          "x-primitive": "bool",

                        },
                        "is_stop_over": {
                          "type": "boolean",
                          "x-primitive": "bool",

                        },
                        "fahrstrategie": {
                          "title": "FahrstrategieEnum",
                          "type": "string",
                          "enum": [
                            "FS_UNSPECIFIED",
                            "FS_SCHNELL",
                            "FS_HALTEN",
                            "FS_NORMAL",
                            "FS_FAHRZEIT_VERTEILEN"
                          ],
                          "x-enum-mapping": {
                            "FS_UNSPECIFIED": 0,
                            "FS_SCHNELL": 1,
                            "FS_HALTEN": 2,
                            "FS_NORMAL": 3,
                            "FS_FAHRZEIT_VERTEILEN": 4
                          },

                        }
                      },
                      "required": [],
                      "tags": {
                        "event_id_from": 1,
                        "event_id_to": 2,
                        "event_link_properties_id": 3,
                        "min_duration": 10,
                        "is_min_duration_calculated": 11,
                        "is_stop_over": 12,
                        "fahrstrategie": 13
                      },

                    },
                    "train_run_segment": {
                      "title": "TrainRunSegmentMsg",
                      "type": "object",
                      "properties": {
                        "event_id_from": {
                          "type": "integer",
                          "minimum": -2147483648,
                          "maximum": 2147483647,
                          "x-primitive": "int32",

                        },
                        "event_id_to": {
                          "type": "integer",
                          "minimum": -2147483648,
                          "maximum": 2147483647,
                          "x-primitive": "int32",

                        },
                        "abschnitts_formation_id": {
                          "title": "Int32Value",
                          "type": [
                            "null",
                            "integer"
                          ],
                          "minimum": -2147483648,
                          "maximum": 2147483647,
                          "x-primitive": "int32",

                        },
                        "train_category": {
                          "type": "string",
                          "x-primitive": "string",

                        },
                        "train_series": {
                          "title": "TrainSeriesTypeEnum",
                          "type": "string",
                          "enum": [
                            "TST_UNSPECIFIED",
                            "TST_R",
                            "TST_A",
                            "TST_D",
                            "TST_N"
                          ],
                          "x-enum-mapping": {
                            "TST_UNSPECIFIED": 0,
                            "TST_R": 1,
                            "TST_A": 2,
                            "TST_D": 3,
                            "TST_N": 4
                          },

                        }
                      },
                      "required": [],
                      "tags": {
                        "event_id_from": 1,
                        "event_id_to": 2,
                        "abschnitts_formation_id": 3,
                        "train_category": 4,
                        "train_series": 5
                      },

                    },
                    "connection_decision_time": {
                      "title": "Int32Value",
                      "type": [
                        "null",
                        "integer"
                      ],
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "x-primitive": "int32",

                    },
                    "ahead_of_schedule_strategy": {
                      "title": "AheadOfScheduleStrategyEnum",
                      "type": "string",
                      "enum": [
                        "AOSS_UNSPECIFIED",
                        "AOSS_ALLOWED",
                        "AOSS_PROHIBITED",
                        "AOSS_OBSERVE_EARLIEST_TIMES",
                        "AOSS_ONLY_WHEN_ROUTE_IS_SET"
                      ],
                      "x-enum-mapping": {
                        "AOSS_UNSPECIFIED": 0,
                        "AOSS_ALLOWED": 1,
                        "AOSS_PROHIBITED": 2,
                        "AOSS_OBSERVE_EARLIEST_TIMES": 4,
                        "AOSS_ONLY_WHEN_ROUTE_IS_SET": 5
                      },

                    }
                  },
                  "required": [],
                  "tags": {
                    "id": 1,
                    "scheduled_time": 3,
                    "production_time": 4,
                    "stop": 11,
                    "movement": 12,
                    "train_run_segment": 13,
                    "connection_decision_time": 20,
                    "ahead_of_schedule_strategy": 21
                  },

                },

              },
              "composition": {
                "title": "CompositionMsg",
                "type": "object",
                "properties": {
                  "composition_id": {
                    "title": "Int32Value",
                    "type": [
                      "null",
                      "integer"
                    ],
                    "minimum": -2147483648,
                    "maximum": 2147483647,
                    "x-primitive": "int32",

                  },
                  "train_run_id": {
                    "title": "Int32Value",
                    "type": [
                      "null",
                      "integer"
                    ],
                    "minimum": -2147483648,
                    "maximum": 2147483647,
                    "x-primitive": "int32",

                  },
                  "reihenfolge": {
                    "type": "integer",
                    "minimum": -2147483648,
                    "maximum": 2147483647,
                    "x-primitive": "int32",

                  },
                  "umsystem": {
                    "type": "string",
                    "x-primitive": "string",

                  },
                  "alast_anzahlwagen_chlor": {
                    "title": "Int32Value",
                    "type": [
                      "null",
                      "integer"
                    ],
                    "minimum": -2147483648,
                    "maximum": 2147483647,
                    "x-primitive": "int32",

                  },
                  "formationsdaten_zlr": {
                    "title": "AbschnittsFormationsDatenZlrEnum",
                    "type": "string",
                    "enum": [
                      "AFDZ_UNSPECIFIED",
                      "AFDZ_KEINE_TRAKTION",
                      "AFDZ_ANHAENGELAST_FEHLT",
                      "AFDZ_MANUELL_ERGAENZT",
                      "AFDZ_OK"
                    ],
                    "x-enum-mapping": {
                      "AFDZ_UNSPECIFIED": 0,
                      "AFDZ_KEINE_TRAKTION": 1,
                      "AFDZ_ANHAENGELAST_FEHLT": 2,
                      "AFDZ_MANUELL_ERGAENZT": 3,
                      "AFDZ_OK": 4
                    },

                  },
                  "anzahl_loks": {
                    "title": "Int32Value",
                    "type": [
                      "null",
                      "integer"
                    ],
                    "minimum": -2147483648,
                    "maximum": 2147483647,
                    "x-primitive": "int32",

                  }
                },
                "required": [],
                "tags": {
                  "composition_id": 1,
                  "train_run_id": 2,
                  "reihenfolge": 3,
                  "umsystem": 4,
                  "alast_anzahlwagen_chlor": 27,
                  "formationsdaten_zlr": 28,
                  "anzahl_loks": 29
                },

              }
            },
            "required": [],
            "tags": {
              "train_run": 1,
              "timetable_events": 2,
              "composition": 3
            },

          },


        }
      }
    }
  },
  "components": {
    "messages": {
      "testMessage": {
        "schemaFormat": "application/vnd.google.protobuf;version=3",
        "payload": {
          "title": "TrainRunContainerMsg",
          "type": "object",
          "properties": {
            "train_run": {
              "title": "TrainRunMsg",
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "minimum": -2147483648,
                  "maximum": 2147483647,
                  "x-primitive": "int32",

                },
                "trasse_id": {
                  "type": "string",
                  "x-primitive": "string",

                },
                "betriebstag": {
                  "type": "object",
                  "title": "Date",
                  "required": [
                    "year",
                    "month",
                    "day"
                  ],
                  "properties": {
                    "year": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 9999,
                      "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year",

                    },
                    "month": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 12,
                      "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",

                    },
                    "day": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 31,
                      "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",

                    }
                  },
                  "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following:\n\n* A full date, with non-zero year, month, and day values\n* A month and day value, with a zero year, such as an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, such as a credit card expiration date",

                },
                "zugnummer": {
                  "type": "string",
                  "x-primitive": "string",

                },
                "infrastruktur_netz": {
                  "type": "string",
                  "x-primitive": "string",

                },
                "object_period": {
                  "title": "PeriodMsg",
                  "type": "object",
                  "properties": {
                    "von": {
                      "title": "Timestamp",
                      "type": "object",
                      "properties": {
                        "seconds": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991,
                          "default": 0,
                          "description": "Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.",

                        },
                        "nanos": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 999999999,
                          "default": 0,
                          "description": "Non-negative fractions of a second at nanosecond resolution.",

                        }
                      },
                      "description": "A Timestamp represents a point in time independent of any time zone or local calendar, encoded as a count of seconds and fractions of seconds at nanosecond resolution. The count is relative to an epoch at UTC midnight on January 1, 1970, in the proleptic Gregorian calendar which extends the Gregorian calendar backwards to year one.\n\nAll minutes are 60 seconds long. Leap seconds are \"smeared\" so that no leap  second table is needed for interpretation, using a [24-hour linear smear](https://developers.google.com/time/smear).\n\nThe range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By restricting to that range, we ensure that we can convert to and from [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.",

                    },
                    "bis": {
                      "title": "Timestamp",
                      "type": "object",
                      "properties": {
                        "seconds": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991,
                          "default": 0,
                          "description": "Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.",

                        },
                        "nanos": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 999999999,
                          "default": 0,
                          "description": "Non-negative fractions of a second at nanosecond resolution.",

                        }
                      },
                      "description": "A Timestamp represents a point in time independent of any time zone or local calendar, encoded as a count of seconds and fractions of seconds at nanosecond resolution. The count is relative to an epoch at UTC midnight on January 1, 1970, in the proleptic Gregorian calendar which extends the Gregorian calendar backwards to year one.\n\nAll minutes are 60 seconds long. Leap seconds are \"smeared\" so that no leap  second table is needed for interpretation, using a [24-hour linear smear](https://developers.google.com/time/smear).\n\nThe range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By restricting to that range, we ensure that we can convert to and from [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.",

                    }
                  },
                  "required": [],
                  "tags": {
                    "von": 1,
                    "bis": 2
                  },

                },
                "dr": {
                  "title": "Duration",
                  "type": "object",
                  "properties": {
                    "seconds": {
                      "type": "integer",
                      "minimum": -315576000000,
                      "maximum": 315576000000,
                      "default": 0,
                      "description": "Signed seconds of the span of time. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years",

                    },
                    "nanos": {
                      "type": "integer",
                      "minimum": -999999999,
                      "maximum": 999999999,
                      "default": 0,
                      "description": "Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field.",

                    }
                  },
                  "description": "A Duration represents a signed, fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like day or month",

                },
                "composition": {
                  "title": "CompositionMsg",
                  "type": "object",
                  "properties": {
                    "composition_id": {
                      "title": "Int32Value",
                      "type": [
                        "null",
                        "integer"
                      ],
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "x-primitive": "int32",

                    },
                    "train_run_id": {
                      "title": "Int32Value",
                      "type": [
                        "null",
                        "integer"
                      ],
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "x-primitive": "int32",

                    },
                    "reihenfolge": {
                      "type": "integer",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "x-primitive": "int32",

                    },
                    "umsystem": {
                      "type": "string",
                      "x-primitive": "string",

                    },
                    "alast_anzahlwagen_chlor": {
                      "title": "Int32Value",
                      "type": [
                        "null",
                        "integer"
                      ],
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "x-primitive": "int32",

                    },
                    "formationsdaten_zlr": {
                      "title": "AbschnittsFormationsDatenZlrEnum",
                      "type": "string",
                      "enum": [
                        "AFDZ_UNSPECIFIED",
                        "AFDZ_KEINE_TRAKTION",
                        "AFDZ_ANHAENGELAST_FEHLT",
                        "AFDZ_MANUELL_ERGAENZT",
                        "AFDZ_OK"
                      ],
                      "x-enum-mapping": {
                        "AFDZ_UNSPECIFIED": 0,
                        "AFDZ_KEINE_TRAKTION": 1,
                        "AFDZ_ANHAENGELAST_FEHLT": 2,
                        "AFDZ_MANUELL_ERGAENZT": 3,
                        "AFDZ_OK": 4
                      },

                    },
                    "anzahl_loks": {
                      "title": "Int32Value",
                      "type": [
                        "null",
                        "integer"
                      ],
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "x-primitive": "int32",

                    }
                  },
                  "required": [],
                  "tags": {
                    "composition_id": 1,
                    "train_run_id": 2,
                    "reihenfolge": 3,
                    "umsystem": 4,
                    "alast_anzahlwagen_chlor": 27,
                    "formationsdaten_zlr": 28,
                    "anzahl_loks": 29
                  },

                }
              },
              "required": [],
              "tags": {
                "id": 1,
                "trasse_id": 2,
                "betriebstag": 3,
                "zugnummer": 4,
                "infrastruktur_netz": 5,
                "object_period": 6,
                "dr": 7,
                "composition": 8
              },

            },
            "timetable_events": {
              "type": "array",
              "items": {
                "title": "TimetableEventMsg",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "minimum": -2147483648,
                    "maximum": 2147483647,
                    "x-primitive": "int32",

                  },
                  "scheduled_time": {
                    "type": "object",
                    "title": "DateTime",
                    "required": [
                      "year",
                      "month",
                      "day",
                      "hours",
                      "minutes",
                      "seconds",
                      "nanos"
                    ],
                    "properties": {
                      "year": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 9999,
                        "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year",

                      },
                      "month": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 12,
                        "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",

                      },
                      "day": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 31,
                        "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",

                      },
                      "hours": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 23,
                        "description": "Hours of day in 24 hour format. Should be from 0 to 23",

                      },
                      "minutes": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 59,
                        "description": "Minutes of hour of day",

                      },
                      "seconds": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 60,
                        "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.",

                      },
                      "nanos": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 999999999,
                        "description": "Fractions of seconds in nanoseconds.",

                      },
                      "time_offset": {
                        "oneOf": [
                          {
                            "type": "object",
                            "title": "TimeZone",
                            "required": [
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\".",

                              },
                              "version": {
                                "type": "string",
                                "description": "IANA Time Zone Database version number, e.g. \"2019a\".",

                              }
                            },
                            "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",

                          },
                          {
                            "type": "object",
                            "title": "Duration",
                            "properties": {
                              "seconds": {
                                "type": "integer",
                                "minimum": -315576000000,
                                "maximum": 315576000000,
                                "default": 0,
                                "description": "Signed seconds of the span of time. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years",

                              },
                              "nanos": {
                                "type": "integer",
                                "minimum": -999999999,
                                "maximum": 999999999,
                                "default": 0,
                                "description": "Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field.",

                              }
                            },
                            "description": "A Duration represents a signed, fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like day or month",

                          }
                        ],

                      }
                    },
                    "description": "Represents civil time (or occasionally physical time).",

                  },
                  "production_time": {
                    "type": "object",
                    "title": "DateTime",
                    "required": [
                      "year",
                      "month",
                      "day",
                      "hours",
                      "minutes",
                      "seconds",
                      "nanos"
                    ],
                    "properties": {
                      "year": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 9999,
                        "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year",

                      },
                      "month": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 12,
                        "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",

                      },
                      "day": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 31,
                        "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",

                      },
                      "hours": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 23,
                        "description": "Hours of day in 24 hour format. Should be from 0 to 23",

                      },
                      "minutes": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 59,
                        "description": "Minutes of hour of day",

                      },
                      "seconds": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 60,
                        "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.",

                      },
                      "nanos": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 999999999,
                        "description": "Fractions of seconds in nanoseconds.",

                      },
                      "time_offset": {
                        "oneOf": [
                          {
                            "type": "object",
                            "title": "TimeZone",
                            "required": [
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\".",

                              },
                              "version": {
                                "type": "string",
                                "description": "IANA Time Zone Database version number, e.g. \"2019a\".",

                              }
                            },
                            "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",

                          },
                          {
                            "type": "object",
                            "title": "Duration",
                            "properties": {
                              "seconds": {
                                "type": "integer",
                                "minimum": -315576000000,
                                "maximum": 315576000000,
                                "default": 0,
                                "description": "Signed seconds of the span of time. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years",

                              },
                              "nanos": {
                                "type": "integer",
                                "minimum": -999999999,
                                "maximum": 999999999,
                                "default": 0,
                                "description": "Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field.",

                              }
                            },
                            "description": "A Duration represents a signed, fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like day or month",

                          }
                        ],

                      }
                    },
                    "description": "Represents civil time (or occasionally physical time).",

                  },
                  "stop": {
                    "title": "StopMsg",
                    "type": "object",
                    "properties": {
                      "event_id_from": {
                        "title": "Int32Value",
                        "type": [
                          "null",
                          "integer"
                        ],
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "x-primitive": "int32",

                      },
                      "event_id_to": {
                        "title": "UInt32Value",
                        "type": [
                          "null",
                          "integer"
                        ],
                        "minimum": 0,
                        "maximum": 4294967295,
                        "x-primitive": "uint32",

                      },
                      "event_link_properties_id": {
                        "title": "UInt64Value",
                        "type": [
                          "null",
                          "integer"
                        ],
                        "minimum": 0,
                        "maximum": 9007199254740991,
                        "x-primitive": "uint64",

                      },
                      "min_duration": {
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "x-primitive": "int32",

                      },
                      "purposes": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "x-primitive": "string",

                        },

                      }
                    },
                    "required": [],
                    "tags": {
                      "event_id_from": 1,
                      "event_id_to": 2,
                      "event_link_properties_id": 3,
                      "min_duration": 10,
                      "purposes": 11
                    },

                  },
                  "movement": {
                    "title": "MovementMsg",
                    "type": "object",
                    "properties": {
                      "event_id_from": {
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "x-primitive": "int32",

                      },
                      "event_id_to": {
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "x-primitive": "int32",

                      },
                      "event_link_properties_id": {
                        "title": "Int32Value",
                        "type": [
                          "null",
                          "integer"
                        ],
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "x-primitive": "int32",

                      },
                      "min_duration": {
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "x-primitive": "int32",

                      },
                      "is_min_duration_calculated": {
                        "type": "boolean",
                        "x-primitive": "bool",

                      },
                      "is_stop_over": {
                        "type": "boolean",
                        "x-primitive": "bool",

                      },
                      "fahrstrategie": {
                        "title": "FahrstrategieEnum",
                        "type": "string",
                        "enum": [
                          "FS_UNSPECIFIED",
                          "FS_SCHNELL",
                          "FS_HALTEN",
                          "FS_NORMAL",
                          "FS_FAHRZEIT_VERTEILEN"
                        ],
                        "x-enum-mapping": {
                          "FS_UNSPECIFIED": 0,
                          "FS_SCHNELL": 1,
                          "FS_HALTEN": 2,
                          "FS_NORMAL": 3,
                          "FS_FAHRZEIT_VERTEILEN": 4
                        },

                      }
                    },
                    "required": [],
                    "tags": {
                      "event_id_from": 1,
                      "event_id_to": 2,
                      "event_link_properties_id": 3,
                      "min_duration": 10,
                      "is_min_duration_calculated": 11,
                      "is_stop_over": 12,
                      "fahrstrategie": 13
                    },

                  },
                  "train_run_segment": {
                    "title": "TrainRunSegmentMsg",
                    "type": "object",
                    "properties": {
                      "event_id_from": {
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "x-primitive": "int32",

                      },
                      "event_id_to": {
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "x-primitive": "int32",

                      },
                      "abschnitts_formation_id": {
                        "title": "Int32Value",
                        "type": [
                          "null",
                          "integer"
                        ],
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "x-primitive": "int32",

                      },
                      "train_category": {
                        "type": "string",
                        "x-primitive": "string",

                      },
                      "train_series": {
                        "title": "TrainSeriesTypeEnum",
                        "type": "string",
                        "enum": [
                          "TST_UNSPECIFIED",
                          "TST_R",
                          "TST_A",
                          "TST_D",
                          "TST_N"
                        ],
                        "x-enum-mapping": {
                          "TST_UNSPECIFIED": 0,
                          "TST_R": 1,
                          "TST_A": 2,
                          "TST_D": 3,
                          "TST_N": 4
                        },

                      }
                    },
                    "required": [],
                    "tags": {
                      "event_id_from": 1,
                      "event_id_to": 2,
                      "abschnitts_formation_id": 3,
                      "train_category": 4,
                      "train_series": 5
                    },

                  },
                  "connection_decision_time": {
                    "title": "Int32Value",
                    "type": [
                      "null",
                      "integer"
                    ],
                    "minimum": -2147483648,
                    "maximum": 2147483647,
                    "x-primitive": "int32",

                  },
                  "ahead_of_schedule_strategy": {
                    "title": "AheadOfScheduleStrategyEnum",
                    "type": "string",
                    "enum": [
                      "AOSS_UNSPECIFIED",
                      "AOSS_ALLOWED",
                      "AOSS_PROHIBITED",
                      "AOSS_OBSERVE_EARLIEST_TIMES",
                      "AOSS_ONLY_WHEN_ROUTE_IS_SET"
                    ],
                    "x-enum-mapping": {
                      "AOSS_UNSPECIFIED": 0,
                      "AOSS_ALLOWED": 1,
                      "AOSS_PROHIBITED": 2,
                      "AOSS_OBSERVE_EARLIEST_TIMES": 4,
                      "AOSS_ONLY_WHEN_ROUTE_IS_SET": 5
                    },

                  }
                },
                "required": [],
                "tags": {
                  "id": 1,
                  "scheduled_time": 3,
                  "production_time": 4,
                  "stop": 11,
                  "movement": 12,
                  "train_run_segment": 13,
                  "connection_decision_time": 20,
                  "ahead_of_schedule_strategy": 21
                },

              },

            },
            "composition": {
              "title": "CompositionMsg",
              "type": "object",
              "properties": {
                "composition_id": {
                  "title": "Int32Value",
                  "type": [
                    "null",
                    "integer"
                  ],
                  "minimum": -2147483648,
                  "maximum": 2147483647,
                  "x-primitive": "int32",

                },
                "train_run_id": {
                  "title": "Int32Value",
                  "type": [
                    "null",
                    "integer"
                  ],
                  "minimum": -2147483648,
                  "maximum": 2147483647,
                  "x-primitive": "int32",

                },
                "reihenfolge": {
                  "type": "integer",
                  "minimum": -2147483648,
                  "maximum": 2147483647,
                  "x-primitive": "int32",

                },
                "umsystem": {
                  "type": "string",
                  "x-primitive": "string",

                },
                "alast_anzahlwagen_chlor": {
                  "title": "Int32Value",
                  "type": [
                    "null",
                    "integer"
                  ],
                  "minimum": -2147483648,
                  "maximum": 2147483647,
                  "x-primitive": "int32",

                },
                "formationsdaten_zlr": {
                  "title": "AbschnittsFormationsDatenZlrEnum",
                  "type": "string",
                  "enum": [
                    "AFDZ_UNSPECIFIED",
                    "AFDZ_KEINE_TRAKTION",
                    "AFDZ_ANHAENGELAST_FEHLT",
                    "AFDZ_MANUELL_ERGAENZT",
                    "AFDZ_OK"
                  ],
                  "x-enum-mapping": {
                    "AFDZ_UNSPECIFIED": 0,
                    "AFDZ_KEINE_TRAKTION": 1,
                    "AFDZ_ANHAENGELAST_FEHLT": 2,
                    "AFDZ_MANUELL_ERGAENZT": 3,
                    "AFDZ_OK": 4
                  },

                },
                "anzahl_loks": {
                  "title": "Int32Value",
                  "type": [
                    "null",
                    "integer"
                  ],
                  "minimum": -2147483648,
                  "maximum": 2147483647,
                  "x-primitive": "int32",

                }
              },
              "required": [],
              "tags": {
                "composition_id": 1,
                "train_run_id": 2,
                "reihenfolge": 3,
                "umsystem": 4,
                "alast_anzahlwagen_chlor": 27,
                "formationsdaten_zlr": 28,
                "anzahl_loks": 29
              },

            }
          },
          "required": [],
          "tags": {
            "train_run": 1,
            "timetable_events": 2,
            "composition": 3
          },

        },


      }
    }
  },


}